apiVersion: v1
kind: ConfigMap
metadata:
  name:  "create-index-template"
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  create-index-template.sh: |-
    #! /bin/bash
    while true; do
      HTTP_CODE=$(curl --silent --write-out %{http_code} -o /dev/null -X GET "localhost:9200/_cluster/health?local=true")
      if [[ "$HTTP_CODE" != "" ]]; then
        if (( $HTTP_CODE >= 200 && $HTTP_CODE <= 299 )); then
          echo "Connected ES server"
          break
        fi
      fi
      echo "Repeating until ES server is ready..."
      sleep 5
    done

    echo "Create lifecycle policy: logstash-policy"
    curl -X PUT "localhost:9200/_ilm/policy/logstash-policy?pretty" -H 'Content-Type: application/json' -d'
    {
      "policy": {
        "phases": {
          "delete": {
            "min_age": "'"${IDO_ES_INDEX_AGE}"'",
            "actions": {
              "delete": {
                "delete_searchable_snapshot": true
              }
            }
          }
        }
      }
    }
    '

    echo "Create index template: logstash-template"
    curl -X PUT "localhost:9200/_index_template/logstash-template?pretty" -H 'Content-Type: application/json' -d'
    {
      "index_patterns" : ["logstash-*"],
      "priority" : 1,
      "template": {
        "settings": {
          "index": {
            "lifecycle": {
              "name": "logstash-policy"
            },
            "number_of_shards": "1",
            "number_of_replicas": "0"
          }
        }
      }
    }
    '

    echo "Sleeping..."
    while :; do echo '' > /dev/null; sleep 5 ; done
